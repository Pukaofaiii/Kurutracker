version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: kurutracker_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-kurutracker}
      - POSTGRES_USER=${DB_USER:-kurutracker_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme123}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-kurutracker_user}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: kurutracker_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-me-in-production}
      - DB_NAME=${DB_NAME:-kurutracker}
      - DB_USER=${DB_USER:-kurutracker_user}
      - DB_PASSWORD=${DB_PASSWORD:-changeme123}
      - DB_HOST=db
      - DB_PORT=5432
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    depends_on:
      db:
        condition: service_healthy
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  static_volume:
  media_volume:
